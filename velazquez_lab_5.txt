Elsa Velazquez
Lab5


Software Dev Methods 3308

If you do not already have one, create a GitHub account
elsaVelazquez

2. Create a public git repository
add Repo button

3. Clone the repository to your local machine
clicked cline button then downloaded Windows Desktop version

4. Add and commit a simple README file with your name and the name of this
assignment.
git commit -m "simple readme file elsa lab5"
from Desktop clicked on file and "commit to master"

5. Add and commit a few other files (anything you want) to the repository
in my repo directory, type
git add mydog.txt
git add velazquez_lab_5.txt
git push



6. Create a tag named v0.0.1
git tag -a 1.0.0 -m "Version 1.0.0"


7. Push all changes and tags to your remote repository (note that tags require a special
flag to be included in the push)
git push origin 1.0.0


8. Create and checkout a new branch named testing-new-files
git checkout -b testing-new-files
git push--set-upstream origin master


9. Add and commit a few more files to this branch
git add bomblab.txt
git add cpp.txt
git commit -m "testing new files branch commit test"
git status



10. Checkout the master branch
git checkout master^^


11. Edit and commit at least one of the files in this branch
git commit -m "updated checkout file"
git checkout master




12. Merge the testing-new-files branch into the master branch
git checkout master
git pull origin master



13. Checkout the testing-new-files branch
git commit -m "testing new files branch commit test"



14. Push all of your changes in both branches to your remote repository (make sure that
both branches show up on your remotes host)
git pull origin master




15. Find a partner to work with
https://github.com/kygo4925/Lab5Repository


16. Grant this person/these people write access to your remote repository
granted by push

17. Clone your partner’s remote repository to a new directory outside your original repository

git clone https://github.com/kygo4925/Lab5Repository.git

18. Edit the README file in your partner’s master branch to list your name as ‘Partner:
<Your name here>’
19. Commit your changes
git commit -m "update my name in partners readme file"

20. Push your changes to your partner’s remote repository
git remote add upstream https://github.com/kygo4925/Lab5Repository



21. Return to your original repository (but do not pull from your remote branch yet)
cd ..
ls
cd 3308SoftwareDev

22. Checkout your master branch




23. Edit your README file to add a line that says “This might cause a merge conflict”
24. Commit your changes.
25. Make sure that your partner has completed step 20 (pushed their changes to your
README)
26. Attempt to pull your partner’s changes to your repository
27. Resolve the merge conflict if one occurs
28. Commit the merge (assuming a conflict occurred)
29. Copy and paste the entry showing your merge resolution from the log into a text file
30. Push the merged changes back into your remote repo
Credit: To get credit for this lab exercise, show the TA your lab completion log which includes:
- Your name – Github account name
- Your partner’s name – Github account name
- The screenshots of the merge conflict and resolution.